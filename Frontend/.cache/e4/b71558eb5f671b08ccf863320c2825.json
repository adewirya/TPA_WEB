{"id":"Code/ReadFile.tsx","dependencies":[{"name":"C:\\Users\\62822\\Documents\\Asslab\\TPA\\TPA Web\\Coding\\TPA_NK\\tsconfig.json","includedInParent":true,"mtime":1627612685633},{"name":"C:\\Users\\62822\\Documents\\Asslab\\TPA\\TPA Web\\Coding\\TPA_NK\\package.json","includedInParent":true,"mtime":1631712264240}],"generated":{"js":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReadFiles = exports.ReadFile = void 0;\n\nfunction ReadFile(file) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onerror = function (e) {\n      reject(reader.error);\n    };\n\n    reader.onload = function (e) {\n      resolve(reader.result);\n    };\n  });\n}\n\nexports.ReadFile = ReadFile;\n\nfunction ReadFiles(files) {\n  return __awaiter(this, void 0, Promise, function () {\n    var promises, result;\n    return __generator(this, function (_a) {\n      promises = Array.from(files).map(function (f) {\n        return ReadFile(f);\n      });\n      result = Promise.all(promises);\n      return [2\n      /*return*/\n      , result];\n    });\n  });\n}\n\nexports.ReadFiles = ReadFiles;"},"sourceMaps":{"js":{"mappings":[{"source":"Code/ReadFile.tsx","name":null,"original":{"line":4,"column":0},"generated":{"line":151,"column":0}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":4,"column":16},"generated":{"line":151,"column":9}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":4,"column":0},"generated":{"line":151,"column":17}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":4,"column":25},"generated":{"line":151,"column":18}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":4,"column":0},"generated":{"line":151,"column":22}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":4,"column":35},"generated":{"line":151,"column":24}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":5,"column":4},"generated":{"line":152,"column":0}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":5,"column":11},"generated":{"line":152,"column":9}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":5,"column":15},"generated":{"line":152,"column":13}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":5,"column":11},"generated":{"line":152,"column":20}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":5,"column":31},"generated":{"line":152,"column":21}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":5,"column":32},"generated":{"line":152,"column":31}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":5,"column":31},"generated":{"line":152,"column":38}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":5,"column":41},"generated":{"line":152,"column":40}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":5,"column":31},"generated":{"line":152,"column":46}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":5,"column":47},"generated":{"line":152,"column":48}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":6,"column":8},"generated":{"line":153,"column":0}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":6,"column":14},"generated":{"line":153,"column":8}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":6,"column":20},"generated":{"line":153,"column":14}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":6,"column":23},"generated":{"line":153,"column":17}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":6,"column":27},"generated":{"line":153,"column":21}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":6,"column":23},"generated":{"line":153,"column":31}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":6,"column":8},"generated":{"line":153,"column":33}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":8,"column":8},"generated":{"line":154,"column":0}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":8,"column":8},"generated":{"line":154,"column":4}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":8,"column":14},"generated":{"line":154,"column":10}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":8,"column":15},"generated":{"line":154,"column":11}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":8,"column":8},"generated":{"line":154,"column":24}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":8,"column":29},"generated":{"line":154,"column":25}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":8,"column":8},"generated":{"line":154,"column":29}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":10,"column":8},"generated":{"line":156,"column":0}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":10,"column":8},"generated":{"line":156,"column":4}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":10,"column":14},"generated":{"line":156,"column":10}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":10,"column":15},"generated":{"line":156,"column":11}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":10,"column":8},"generated":{"line":156,"column":18}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":10,"column":25},"generated":{"line":156,"column":21}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":10,"column":25},"generated":{"line":156,"column":31}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":10,"column":25},"generated":{"line":156,"column":32}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":10,"column":26},"generated":{"line":156,"column":34}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":11,"column":12},"generated":{"line":157,"column":0}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":11,"column":12},"generated":{"line":157,"column":6}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":11,"column":18},"generated":{"line":157,"column":12}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":11,"column":19},"generated":{"line":157,"column":13}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":11,"column":25},"generated":{"line":157,"column":19}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":11,"column":26},"generated":{"line":157,"column":20}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":11,"column":18},"generated":{"line":157,"column":25}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":11,"column":12},"generated":{"line":157,"column":26}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":12,"column":9},"generated":{"line":158,"column":0}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":10,"column":8},"generated":{"line":158,"column":5}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":14,"column":8},"generated":{"line":160,"column":0}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":14,"column":8},"generated":{"line":160,"column":4}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":14,"column":14},"generated":{"line":160,"column":10}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":14,"column":15},"generated":{"line":160,"column":11}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":14,"column":8},"generated":{"line":160,"column":17}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":14,"column":24},"generated":{"line":160,"column":20}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":14,"column":24},"generated":{"line":160,"column":30}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":14,"column":24},"generated":{"line":160,"column":31}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":14,"column":25},"generated":{"line":160,"column":33}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":15,"column":12},"generated":{"line":161,"column":0}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":15,"column":12},"generated":{"line":161,"column":6}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":15,"column":19},"generated":{"line":161,"column":13}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":15,"column":20},"generated":{"line":161,"column":14}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":15,"column":26},"generated":{"line":161,"column":20}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":15,"column":27},"generated":{"line":161,"column":21}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":15,"column":19},"generated":{"line":161,"column":27}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":15,"column":12},"generated":{"line":161,"column":28}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":16,"column":9},"generated":{"line":162,"column":0}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":14,"column":8},"generated":{"line":162,"column":5}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":17,"column":5},"generated":{"line":163,"column":0}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":5,"column":11},"generated":{"line":163,"column":3}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":5,"column":4},"generated":{"line":163,"column":4}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":18,"column":1},"generated":{"line":164,"column":0}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":4,"column":0},"generated":{"line":166,"column":0}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":4,"column":0},"generated":{"line":166,"column":7}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":4,"column":0},"generated":{"line":166,"column":8}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":4,"column":0},"generated":{"line":166,"column":16}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":4,"column":0},"generated":{"line":166,"column":19}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":4,"column":0},"generated":{"line":166,"column":27}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":20,"column":0},"generated":{"line":168,"column":0}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":20,"column":22},"generated":{"line":168,"column":9}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":20,"column":0},"generated":{"line":168,"column":18}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":20,"column":32},"generated":{"line":168,"column":19}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":20,"column":0},"generated":{"line":168,"column":24}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":20,"column":47},"generated":{"line":168,"column":26}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":20,"column":50},"generated":{"line":169,"column":33}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":20,"column":57},"generated":{"line":169,"column":42}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":20,"column":57},"generated":{"line":169,"column":54}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":21,"column":10},"generated":{"line":172,"column":0}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":21,"column":10},"generated":{"line":172,"column":6}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":21,"column":18},"generated":{"line":172,"column":14}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":21,"column":21},"generated":{"line":172,"column":17}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":21,"column":26},"generated":{"line":172,"column":22}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":21,"column":27},"generated":{"line":172,"column":23}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":21,"column":21},"generated":{"line":172,"column":27}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":21,"column":32},"generated":{"line":172,"column":28}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":21,"column":21},"generated":{"line":172,"column":33}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":21,"column":39},"generated":{"line":172,"column":35}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":21,"column":21},"generated":{"line":172,"column":38}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":21,"column":43},"generated":{"line":172,"column":39}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":21,"column":43},"generated":{"line":172,"column":49}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":21,"column":43},"generated":{"line":172,"column":50}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":21,"column":44},"generated":{"line":172,"column":52}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":21,"column":48},"generated":{"line":173,"column":0}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":21,"column":48},"generated":{"line":173,"column":15}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":21,"column":56},"generated":{"line":173,"column":23}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":21,"column":57},"generated":{"line":173,"column":24}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":21,"column":56},"generated":{"line":173,"column":25}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":21,"column":48},"generated":{"line":173,"column":26}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":21,"column":59},"generated":{"line":174,"column":0}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":21,"column":21},"generated":{"line":174,"column":7}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":21,"column":10},"generated":{"line":174,"column":8}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":22,"column":10},"generated":{"line":175,"column":0}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":22,"column":10},"generated":{"line":175,"column":6}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":22,"column":16},"generated":{"line":175,"column":12}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":22,"column":19},"generated":{"line":175,"column":15}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":22,"column":26},"generated":{"line":175,"column":22}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":22,"column":27},"generated":{"line":175,"column":23}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":22,"column":19},"generated":{"line":175,"column":26}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":22,"column":31},"generated":{"line":175,"column":27}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":22,"column":19},"generated":{"line":175,"column":35}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":22,"column":10},"generated":{"line":175,"column":36}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":23,"column":4},"generated":{"line":176,"column":0}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":23,"column":4},"generated":{"line":176,"column":13}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":23,"column":4},"generated":{"line":176,"column":14}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":23,"column":4},"generated":{"line":177,"column":0}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":23,"column":4},"generated":{"line":178,"column":0}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":23,"column":11},"generated":{"line":178,"column":8}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":23,"column":4},"generated":{"line":178,"column":14}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":23,"column":4},"generated":{"line":178,"column":15}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":24,"column":1},"generated":{"line":181,"column":0}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":20,"column":0},"generated":{"line":183,"column":0}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":20,"column":0},"generated":{"line":183,"column":7}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":20,"column":0},"generated":{"line":183,"column":8}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":20,"column":0},"generated":{"line":183,"column":17}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":20,"column":0},"generated":{"line":183,"column":20}},{"source":"Code/ReadFile.tsx","name":null,"original":{"line":20,"column":0},"generated":{"line":183,"column":29}}],"sources":{"Code/ReadFile.tsx":"import { reject, resolve } from 'q';\r\nimport React from 'react';\r\n\r\nexport function ReadFile(file: File): Promise<string> {\r\n    return new Promise<string>((resolve, reject) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.readAsDataURL(file);\r\n\r\n        reader.onerror = e => {\r\n            reject(reader.error);\r\n        };\r\n\r\n        reader.onload = e => {\r\n            resolve(reader.result as string);\r\n        };\r\n    });\r\n}\r\n\r\nexport async function ReadFiles(files: FileList): Promise<string[]> {\r\n    const promises = Array.from(files).map(f => ReadFile(f));\r\n    const result = Promise.all(promises);\r\n    return result;\r\n}"},"lineCount":null}},"error":null,"hash":"c55d94c47c56aa4d974a23c8932e0f50","cacheData":{"env":{}}}